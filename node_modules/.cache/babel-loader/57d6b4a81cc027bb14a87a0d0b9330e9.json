{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\DjangoMedicalStoreFrontEndInReactJS\\\\src\\\\components\\\\AutoCompleteMedicine.js\";\nimport React from \"react\";\nimport APIHandler from \"../utils/APIHandler\";\n\nclass AutoCompleteMedicine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onFocus: false,\n      datalist: []\n    };\n\n    this.onFocusChange = () => {\n      this.setState({\n        onFocus: true\n      });\n    };\n\n    this.onBlurChange = () => {\n      this.setState({\n        onFocus: false\n      });\n    };\n\n    this.onShowItem = item => {\n      console.log(item);\n      this.inputData.current.value = item.name;\n      this.props.showDataInInputs(this.props.itemPostion, item);\n      this.onBlurChange();\n    };\n\n    this.loadDataMedicine = this.loadDataMedicine.bind(this);\n    this.inputData = React.createRef();\n  }\n\n  async loadDataMedicine(event) {\n    var apiHandler = new APIHandler();\n    var dataresponse = await apiHandler.fetchMedicineByName(event.target.value);\n    this.setState({\n      datalist: dataresponse.data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"medicine_name\",\n      name: \"medicine_name\",\n      className: \"form-control\",\n      placeholder: \"Enter Medicine Name\",\n      onFocus: this.onFocusChange,\n      autoComplete: \"off\",\n      onChange: this.loadDataMedicine,\n      ref: this.inputData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), this.state.onFocus == true ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        margin: 0,\n        padding: 0,\n        border: \"1px solid lightgrey\",\n        boxShadow: \"1px 1px 1px lightgrey\",\n        position: \"absolute\",\n        width: \"100%\",\n        zIndex: 1,\n        background: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, this.state.datalist.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      style: {\n        padding: 5,\n        borderBottom: \"1px solid lightgrey\"\n      },\n      onClick: () => this.onShowItem(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, item.name)))) : \"\");\n  }\n\n}\n\nexport default AutoCompleteMedicine;","map":{"version":3,"sources":["D:/react/DjangoMedicalStoreFrontEndInReactJS/src/components/AutoCompleteMedicine.js"],"names":["React","APIHandler","AutoCompleteMedicine","Component","constructor","props","state","onFocus","datalist","onFocusChange","setState","onBlurChange","onShowItem","item","console","log","inputData","current","value","name","showDataInInputs","itemPostion","loadDataMedicine","bind","createRef","event","apiHandler","dataresponse","fetchMedicineByName","target","data","render","listStyle","margin","padding","border","boxShadow","position","width","zIndex","background","map","index","borderBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport APIHandler from \"../utils/APIHandler\";\n\nclass AutoCompleteMedicine extends React.Component {\n  state = {\n    onFocus: false,\n    datalist: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.loadDataMedicine = this.loadDataMedicine.bind(this);\n    this.inputData = React.createRef();\n  }\n\n  onFocusChange = () => {\n    this.setState({ onFocus: true });\n  };\n  onBlurChange = () => {\n    this.setState({ onFocus: false });\n  };\n\n  async loadDataMedicine(event) {\n    var apiHandler = new APIHandler();\n    var dataresponse = await apiHandler.fetchMedicineByName(event.target.value);\n    this.setState({ datalist: dataresponse.data });\n  }\n\n  onShowItem = (item) => {\n    console.log(item);\n    this.inputData.current.value = item.name;\n    this.props.showDataInInputs(this.props.itemPostion, item);\n    this.onBlurChange();\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <input\n          type=\"text\"\n          id=\"medicine_name\"\n          name=\"medicine_name\"\n          className=\"form-control\"\n          placeholder=\"Enter Medicine Name\"\n          onFocus={this.onFocusChange}\n          autoComplete=\"off\"\n          onChange={this.loadDataMedicine}\n          ref={this.inputData}\n        />\n        {this.state.onFocus == true ? (\n          <div>\n            <ul\n              style={{\n                listStyle: \"none\",\n                margin: 0,\n                padding: 0,\n                border: \"1px solid lightgrey\",\n                boxShadow: \"1px 1px 1px lightgrey\",\n                position: \"absolute\",\n                width: \"100%\",\n                zIndex: 1,\n                background: \"white\",\n              }}\n            >\n              {this.state.datalist.map((item, index) => (\n                <li\n                  key={index}\n                  style={{ padding: 5, borderBottom: \"1px solid lightgrey\" }}\n                  onClick={() => this.onShowItem(item)}\n                >\n                  {item.name}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AutoCompleteMedicine;\n"]},"metadata":{},"sourceType":"module"}