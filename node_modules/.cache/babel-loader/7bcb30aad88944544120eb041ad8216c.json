{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\DjangoMedicalStoreFrontEndInReactJS\\\\src\\\\components\\\\MainComponent.js\";\nimport React from \"react\";\nimport Overlay from \"./Overlay\";\nimport PageLoader from \"./PageLoader\";\nimport Navbar from \"./Navbar\";\nimport Sidebar from \"./Sidebar\";\nimport GoogleFontLoader from \"react-google-font-loader\";\nimport \"adminbsb-materialdesign/css/themes/all-themes.css\";\n\nclass MainComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bodyClass: \"theme-red ls-closed\",\n      displayOverlay: \"none\",\n      width: window.screen.width\n    };\n\n    this.onBarClick = () => {\n      if (this.state.bodyClass === \"theme-red ls-closed overlay-open\") {\n        this.setState({\n          bodyClass: \"theme-red ls-closed\"\n        });\n        this.setState({\n          displayOverlay: \"none\"\n        });\n      } else if (this.state.bodyClass === \"theme-red ls-closed\") {\n        this.setState({\n          bodyClass: \"theme-red ls-closed overlay-open\"\n        });\n        this.setState({\n          displayOverlay: \"block\"\n        });\n      }\n    };\n\n    this.onscreenresize = () => {\n      console.log(window.screen.width);\n      this.setState({\n        width: window.screen.width\n      });\n    };\n  }\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.onscreenresize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onscreenresize);\n  }\n\n  componentDidMount() {\n    var inputall = document.querySelectorAll(\"input\");\n    inputall.forEach(input => {\n      input.addEventListener(\"focus\", function () {\n        this.parentNode.className = \"form-line focused\";\n      });\n    });\n    inputall.forEach(input => {\n      input.addEventListener(\"blur\", function () {\n        this.parentNode.className = \"form-line\";\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (this.state.width > 1150) {\n      document.getElementById(\"root\").className = \"theme-red\";\n    } else {\n      document.getElementById(\"root\").className = this.state.bodyClass;\n    }\n\n    var Page = this.props.page;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleFontLoader, {\n      fonts: [{\n        font: \"Roboto\",\n        weights: [400, 700]\n      }],\n      subsets: [\"latin\", \"cyrillic-ext\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GoogleFontLoader, {\n      fonts: [{\n        font: \"Material+Icons\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Overlay, {\n      display: this.state.displayOverlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navbar, {\n      onBarClick: this.onBarClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, {\n      activepage: this.props.activepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Page, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default MainComponent;","map":{"version":3,"sources":["D:/react/DjangoMedicalStoreFrontEndInReactJS/src/components/MainComponent.js"],"names":["React","Overlay","PageLoader","Navbar","Sidebar","GoogleFontLoader","MainComponent","Component","state","bodyClass","displayOverlay","width","window","screen","onBarClick","setState","onscreenresize","console","log","componentWillMount","addEventListener","componentWillUnmount","removeEventListener","componentDidMount","inputall","document","querySelectorAll","forEach","input","parentNode","className","render","props","getElementById","Page","page","font","weights","activepage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Overlay from \"./Overlay\";\nimport PageLoader from \"./PageLoader\";\nimport Navbar from \"./Navbar\";\nimport Sidebar from \"./Sidebar\";\nimport GoogleFontLoader from \"react-google-font-loader\";\nimport \"adminbsb-materialdesign/css/themes/all-themes.css\";\n\nclass MainComponent extends React.Component {\n  state = {\n    bodyClass: \"theme-red ls-closed\",\n    displayOverlay: \"none\",\n    width: window.screen.width,\n  };\n  onBarClick = () => {\n    if (this.state.bodyClass === \"theme-red ls-closed overlay-open\") {\n      this.setState({ bodyClass: \"theme-red ls-closed\" });\n      this.setState({ displayOverlay: \"none\" });\n    } else if (this.state.bodyClass === \"theme-red ls-closed\") {\n      this.setState({ bodyClass: \"theme-red ls-closed overlay-open\" });\n      this.setState({ displayOverlay: \"block\" });\n    }\n  };\n\n  onscreenresize = () => {\n    console.log(window.screen.width);\n    this.setState({ width: window.screen.width });\n  };\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.onscreenresize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onscreenresize);\n  }\n\n  componentDidMount() {\n    var inputall = document.querySelectorAll(\"input\");\n    inputall.forEach((input) => {\n      input.addEventListener(\"focus\", function () {\n        this.parentNode.className = \"form-line focused\";\n      });\n    });\n\n    inputall.forEach((input) => {\n      input.addEventListener(\"blur\", function () {\n        this.parentNode.className = \"form-line\";\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    if (this.state.width > 1150) {\n      document.getElementById(\"root\").className = \"theme-red\";\n    } else {\n      document.getElementById(\"root\").className = this.state.bodyClass;\n    }\n\n    var Page = this.props.page;\n\n    return (\n      <React.Fragment>\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Roboto\",\n              weights: [400, 700],\n            },\n          ]}\n          subsets={[\"latin\", \"cyrillic-ext\"]}\n        />\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Material+Icons\",\n            },\n          ]}\n        />\n        <Overlay display={this.state.displayOverlay} />\n        <Navbar onBarClick={this.onBarClick} />\n        <Sidebar activepage={this.props.activepage} />\n        <Page {...this.props} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainComponent;\n"]},"metadata":{},"sourceType":"module"}